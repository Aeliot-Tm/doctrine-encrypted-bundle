{
    "name": "aeliot/doctrine-encrypted-bundle",
    "type": "symfony-bundle",
    "description": "The bundle permits to encrypt separate columns of database via Doctrine column types",
    "keywords": [
        "cryptography",
        "encryption",
        "decryption",
        "doctrine-encrypted",
        "doctrine",
        "doctrine-extension",
        "doctrine-dbal",
        "doctrine-orm",
        "doctrine-column-type",
        "doctrine-ast",
        "doctrine-query",
        "symfony",
        "symfony-bundle",
        "php",
        "database",
        "sql-routine",
        "sql-function" 
    ],
    "license": "MIT",
    "authors": [
        {
            "name": "Anatoliy Melnikov",
            "email": "5785276@gmail.com"
        }
    ],
    "autoload": {
        "psr-4": {
            "Aeliot\\Bundle\\DoctrineEncrypted\\": "src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Aeliot\\Bundle\\DoctrineEncrypted\\Tests\\": "tests/",
            "Aeliot\\Bundle\\DoctrineEncrypted\\Tests\\App\\": "app/src"
        }
    },
    "config": {
        "allow-plugins": {
            "symfony/*": true,
            "composer/*": true,
            "phpstan/extension-installer": true
        },
        "sort-packages": true
    },
    "extra": {
        "symfony": {
            "allow-contrib": false,
            "require": "^5.4|^6.0|^7.0"
        }
    },
    "minimum-stability": "dev",
    "prefer-stable": true,
    "require": {
        "php": "^8.2",
        "aeliot/doctrine-encrypted-contracts": "^0.1",
        "aeliot/doctrine-encrypted-query": "^0.1.1",
        "aeliot/doctrine-encrypted-types": "^0.1",
        "doctrine/dbal": "^3.8",
        "doctrine/orm": "^2.15",
        "doctrine/persistence": "^2.0|^3.0",
        "symfony/config": "^5.4|^6.0|^7.0",
        "symfony/dependency-injection": "^5.4|^6.0|^7.0",
        "symfony/http-kernel": "^5.4|^6.0|^7.0"
    },
    "require-dev": {
        "doctrine/doctrine-bundle": "^2",
        "phpstan/extension-installer": "^1.3",
        "phpstan/phpstan": "^1.10",
        "phpstan/phpstan-phpunit": "^1.3",
        "phpunit/phpunit": "9.5.*",
        "roave/security-advisories": "dev-latest",
        "squizlabs/php_codesniffer": "^3.9",
        "symfony/doctrine-bridge": "^5.4|^6.0|^7.0",
        "symfony/dotenv": "^5.4|^6.0|^7.0",
        "symfony/framework-bundle": "^5.4|^6.0|^7.0",
        "symfony/phpunit-bridge": "^5.4|^6.0|^7.0",
        "symfony/yaml": "^5.4|^6.0|^7.0"
    },
    "scripts": {
        "check-all": [
            "@cs-fixer-check",
            "@phpcs",
            "@phpstan",
            "@require-check",
            "@test-unit",
            "@unused"
        ],
        "cs-check": "@cs-fixer-check",
        "cs-fix": "@cs-fixer-fix",
        "cs-fixer-baseline": "XDEBUG_MODE=off tools/pcsf-baseline.phar -b scripts/php-cs-fixer/baseline.json -c scripts/php-cs-fixer/config.php -f scripts/php-cs-fixer/finder.php",
        "cs-fixer-check": "@cs-fixer-fix --dry-run",
        "cs-fixer-fix": "tools/php-cs-fixer.phar fix -vv --config=scripts/php-cs-fixer/config.php",
        "phive-install": "phive install --trust-gpg-keys $(cat .phive/trust-gpg-keys.txt)",
        "phpcs": "vendor/bin/phpcs --standard=PSR12 src",
        "phpcbf": "vendor/bin/phpcbf --standard=PSR12 src",
        "phpstan": [
            "@phpstan-clear",
            "@phpstan-analyse"
        ],
        "phpstan-analyse": "vendor/bin/phpstan analyse -c scripts/phpstan/config.neon --memory-limit=-1",
        "phpstan-baseline": [
            "@phpstan-clear",
            "@phpstan-analyse --generate-baseline scripts/phpstan/baseline.neon --allow-empty-baseline"
        ],
        "phpstan-clear": "vendor/bin/phpstan clear-result-cache",
        "refresh-lock": "for LOCK_VERSION in 5.4 6.0 6.4 7.0 7.1 7.2; do rm -rf vendor && rm -rf composer.lock && cp composer.${LOCK_VERSION}.lock composer.lock && composer install && composer update --lock && mv composer.lock composer.${LOCK_VERSION}.lock; done",
        "require-check": "tools/composer-require-checker check --config-file=scripts/composer-require-checker/config.json composer.json --output=text",
        "test-unit": "vendor/bin/phpunit -c scripts/phpunit/config.xml --testsuite unit -v",
        "unused": "XDEBUG_MODE=off tools/composer-unused.phar unused -c ./scripts/composer-unused/config.php"
    }
}
